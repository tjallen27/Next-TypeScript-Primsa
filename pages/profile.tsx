import React, { useState, useEffect } from "react";
import { useDispatch } from "react-redux";
import type { NextPage, GetStaticProps } from "next";
import { useRouter } from "next/router";
import Head from "next/head";

import { prisma } from "../db";
import styles from "../styles/home.module.css";

import Button from "../components/Button";
import List from "../components/List";
import ListItem from "../components/ListItem";
import Layout from "../components/Layout";

import { useAppSelector } from "../store/hooks";
import { actions as testActions } from "../store/ducks/test/actions";
import { actions as postActions } from "../store/ducks/posts/actions";

type ItemType = {
  title: string;
  description: string;
  salary: number;
};

const Explore: NextPage = (props: any) => {
  const dispatch = useDispatch();
  const router = useRouter();
  const state = useAppSelector((state) => state);
  const [posts, setPosts] = useState<ItemType[]>([]);

  const handleClick = () => {
    dispatch(testActions.createTest("Hi!"));
  };

  const addPost = () => {
    router.push("/create");
  };

  useEffect(() => {
    dispatch(postActions.fetchPosts(props.posts));
  }, [dispatch, props.posts]);

  useEffect(() => {
    if (state.posts) {
      setPosts(state.posts.postsList);
    }
  }, [state]);

  return (
    <Layout>
      <div className={styles.container}>
        <Head>
          <title>Expore</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main>
          <h4 style={{ margin: "10px 0" }}>Explore something</h4>
          <Button handleClick={() => addPost()} variant="secondary">
            Add
          </Button>
          <List>
            {posts?.map((item: ItemType) => (
              <ListItem key={item.title.replace(" ", "")}>
                <h3>{item.title}</h3>

                <span>Salary</span>
                <Button handleClick={() => handleClick()} variant="secondary">
                  Edit
                </Button>
              </ListItem>
            ))}
          </List>
        </main>
      </div>
    </Layout>
  );
};

// export const getStaticProps: GetStaticProps = async () => {
//   const posts = await prisma.posts.findMany();
//   return { props: { posts } };
// };

export default Explore;
